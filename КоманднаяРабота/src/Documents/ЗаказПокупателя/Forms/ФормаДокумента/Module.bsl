
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	
	// ++ Гумерова Задача "Создание ГруппыСкидка" 20.08.2025
	   Группа = Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	   Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	// -- Гумерова 20.08.2025 
	
	
	// ++ Гумерова Задача "Добавление реквизитов на форму" 20.08.2025 
	Если Элементы.Найти("КонтактноеЛицо") = Неопределено Тогда
		ДобавляемыеРеквизиты = Новый Массив;
		ТипРеквизита = Новый ОписаниеТипов("СправочникСсылка.ДЗ_КонтактныеЛица");
		РеквизитКонтактноеЛицо = Новый РеквизитФормы("КонтактноеЛицо", ТипРеквизита, "", "КонтактноеЛицо");
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКонтактноеЛицо);
		
		ИзменитьРеквизиты(ДобавляемыеРеквизиты); 
		
		// Вставили поле Контакное лицо
		ОбКонтактноеЛицо = Элементы.Вставить("КонтактноеЛицо", Тип ("ПолеФормы"), Элементы.ГруппаШапкаПраво , );
		ОбКонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода;
		ОбКонтактноеЛицо.ПутьКДанным = "Объект.ДЗ_КонтактноеЛицо";  
		
		// Вставили поле Скидки
		ОбСогласованнаяСкидка = Элементы.Вставить("СогласованнаяСкидка", Тип ("ПолеФормы"), Элементы.ГруппаСкидка , );
		ОбСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
		ОбСогласованнаяСкидка.ПутьКДанным = "Объект.ДЗ_СогласованнаяСкидка";
		ОбСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "ПриВводеСкидки");
	КонецЕсли;
	// -- Гумерова 20.08.2025 
	
	
	
	// ++ Гумерова Задача "Вывод команды расчета скидки" 20.08.2025
	   Команда = Команды.Добавить("РассчитатьСкидку");
	   Команда.Заголовок = "Рассчитать скидку";
	   Команда.Действие = "КомандаРассчитатьСкидку";
	   
	   КнопкаФормы = Элементы.Добавить("КнопкаРассчитатьСкидку", Тип("КнопкаФормы"), Элементы.ГруппаСкидка );
	   КнопкаФормы.ИмяКоманды = "РассчитатьСкидку";
	   КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;	
	// -- Гумерова 20.08.2025 	
КонецПроцедуры  

&НаКлиенте
Процедура ПриВводеСкидки(Элемент)     
	ЗадатьВопросПользователюАсинх();	
КонецПроцедуры 

&НаКлиенте
Асинх Процедура ЗадатьВопросПользователюАсинх()
	
	Если ЗначениеЗаполнено(Объект.Товары) Или ЗначениеЗаполнено(Объект.Услуги) Тогда
		
		Обещание = ВопросАсинх("Пересчитать табличную часть с учетом указанной скидки?", РежимДиалогаВопрос.ДаНет);  
		ОтветНаВопрос = Ждать Обещание;
		
		Если  ОтветНаВопрос = КодВозвратаДиалога.Да  	Тогда  
			РассчитатьСкидкуВТаблицах();
		КонецЕсли; 
		
	Иначе 
		Возврат
	КонецЕсли;      
	
КонецПроцедуры



&НаКлиенте
 Процедура КомандаРассчитатьСкидку(Команда)
	 РассчитатьСкидкуВТаблицах();
 КонецПроцедуры
 
  &НаКлиенте
Процедура РассчитатьСкидкуВТаблицах()
	
	Для каждого Строка из Объект.Товары Цикл 
		РассчитатьСуммуСтроки(строка) 
	КонецЦикла;
	Для каждого Строка из Объект.Услуги Цикл 
		РассчитатьСуммуСтроки(строка) 
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	// ++ Гумерова Задача "Рассчет суммы строки со скидкой" 20.08.2025  
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * ((100 - Объект.ДЗ_СогласованнаяСкидка)/100);	
	// -- Гумерова 20.08.2025 
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
